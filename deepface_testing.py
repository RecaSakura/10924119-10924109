# -*- coding: utf-8 -*-
"""DeepFace_testing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DAzq7AbZs7135mmS5n-2kWDEKqUsq8V8

##安裝函式庫
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

!pip install deepface

"""##開始測試"""

from deepface import DeepFace as dp
import cv2

"""底下這段代碼作用是使用matplotlib將圖片顯示顯示出來"""

def show_image(*args):
    k = len(args)
    fig = plt.figure(figsize=(5*k, 5))
    for i, photo in enumerate(args):
        plt.subplot(1,k,i+1)
        plt.axis('off')
        plt.axis('equal')
        plt.imshow(cv2.cvtColor(photo, cv2.COLOR_BGR2RGB))

"""###比對兩張照片是否為同一人

定義圖片路徑
"""

base_dir = "/content/drive/MyDrive/專題製作-具人格特質聊天機器人/TestImages"
face_dir = "/content/drive/MyDrive/專題製作-具人格特質聊天機器人/TestImages/face"

base_dir = "/home/recasakura/桌面"
face_dir = "/home/recasakura/桌面"

im01_path = base_dir + '/' + "IMG1.jpg"
im01 = cv2.imread(im01_path)
###嫌麻煩也可以直接 im01_path = base_dir/content/drive/MyDrive/img.jpg

im02_path = "C/桌面"
im02 = cv2.imread(im02_path)

show_image(im01, im02)
###使用剛剛def的副程式 show出圖片，若只想show一張就只需要show_image(im01)

### result為辨識後的各項數據
result  = dp.verify(im01, im02, model_name="DeepFace")
result

###也可以只顯示兩張照片是否為同一人
if(result['verified'])==True:
  print("兩人為同一人")
else:
  print("兩人不同人")

"""###辨識人種、性別、年齡、情緒

底下程式是將辨識後的資料以簡潔的方式顯示出來
"""

###labels將obj裡的資料，轉換成中文
labels = {'angry':'生氣', 'disgust':'厭惡', 'fear':'恐懼',
          'happy':'開心', 'neutral':'普通', 
          'sad':'悲傷', 'surprise':'吃驚',
          'Man':'男', 'Woman':'女',
          'asian':'亞洲', 'black':'黑', 'indian':'印弟安',
          'latino hispanic':'拉丁美洲 (西班牙裔)', 
          'middle eastern':'中東', 'white':'白'}
###obj裡有不少數據，如同剛剛的result一樣，這段程式的作用就是將它可視化，不然輸出的數據會很雜亂
def show_info(obj):
    age = obj[0]["age"]
    emotion = labels[obj[0]['dominant_emotion']]
    race = labels[obj[0]['dominant_race']]
    gender = labels[obj[0]['dominant_gender']]
    text = f"這是一位 {age} 歲的{race}人{gender}性, 他的表情是{emotion}的。"
    print(text)

im03_path = base_dir + '/' + "IMG2.jpg"
im03 = cv2.imread(im03_path)
obj = dp.analyze(img_path = im03_path, actions = ['age', 'gender', 'race', 'emotion'])
show_image(im03)
show_info(obj)

###上面的輸出文字是經過簡化與可視化的結果，若直接顯示obj則:
obj[0]

"""測試不同性別、人種"""

im04_path = base_dir + "/IMG1.jpg"
im04 = cv2.imread(im04_path)
     

obj = dp.analyze(img_path = im04_path, actions = ['age', 'gender', 'race', 'emotion'])
show_image(im04)
print("\n\n")
show_info(obj)

im05_path = base_dir + "/lading.jpg"
im05 = cv2.imread(im05_path)
     

obj = dp.analyze(img_path = im05_path, actions = ['age', 'gender', 'race', 'emotion'])
show_image(im05)
print("\n\n")
show_info(obj)

im06_path = base_dir + "/Woman.jpg"
im06 = cv2.imread(im06_path)
     

obj = dp.analyze(img_path = im06_path, actions = ['age', 'gender', 'race', 'emotion'])
show_image(im06)
print("\n\n")
print("\n\n")
show_info(obj)

im07_path = base_dir + "/blackwoman.jpg"
im07 = cv2.imread(im07_path)
     

obj = dp.analyze(img_path = im07_path, actions = ['age', 'gender', 'race', 'emotion'])
show_image(im07)
print("\n\n")
show_info(obj)

im07_path = base_dir + "/Latina.jpg"
im07 = cv2.imread(im07_path)

obj = dp.analyze(img_path = im07_path, actions = ['age', 'gender', 'race', 'emotion'])
show_image(im07)
print("\n\n")
show_info(obj)

"""###同一張圖使用不同擷取臉部的模型"""

###可以看到在上一張圖片，明顯不是白人，所以還是會有誤判
backends = ['opencv',   'ssd',   'dlib',   'mtcnn',   'retinaface']
###以下測試使用不同臉部擷取所帶來的效果

im07_path = base_dir + "/Latina.jpg"
im07 = cv2.imread(im07_path)

obj = dp.analyze(img_path = im07_path, actions = ['age', 'gender', 'race', 'emotion'], detector_backend = backends[0])
print("\n",backends[0],"輸出結果:",end="")
show_info(obj)

obj = dp.analyze(img_path = im07_path, actions = ['age', 'gender', 'race', 'emotion'], detector_backend = backends[1])
print("\n",backends[1],"輸出結果:",end="")
show_info(obj)

obj = dp.analyze(img_path = im07_path, actions = ['age', 'gender', 'race', 'emotion'], detector_backend = backends[2])
print("\n",backends[2],"輸出結果:",end="")
show_info(obj)

obj = dp.analyze(img_path = im07_path, actions = ['age', 'gender', 'race', 'emotion'], detector_backend = backends[3])
print("\n",backends[3],"輸出結果:",end="")
show_info(obj)

obj = dp.analyze(img_path = im07_path, actions = ['age', 'gender', 'race', 'emotion'], detector_backend = backends[4])
print("\n",backends[4],"輸出結果:",end="")
show_info(obj)

show_image(im07)